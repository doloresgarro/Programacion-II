#BlueJ class context
comment0.target=Micro
comment0.text=\r\n\ 3-A-\ Definir\ una\ clase\ para\ representar\ micros.\ Un\ micro\ se\ caracteriza\ por\ su\ patente,\ destino,\ hora\ salida,\ una\ cantidad\ de\ asientos\r\n\ fija\ (20)\ para\ los\ que\ debe\ registrar\ su\ estado\ (es\ decir\ si\ est\u00E1\ o\ no\ ocupado)\ y\ cantidad\ de\ asientos\ ocupados.\ \ \r\n\ El\ micro\ puede\ ocuparse\ total\ o\ parcialmente.\r\na)\ \ \ \ Defina\ m\u00E9todos\ getters/setters\ para\ patente,\ destino\ y\ hora\ de\ salida.\r\nb)\ \ \ \ Implemente\ un\ constructor\ que\ permita\ inicializar\ el\ micro\ creado\ con\ una\ patente,\ \ un\ destino\ y\ una\ hora\ de\ salida\ \r\n(recibidas\ como\ par\u00E1metro)\ y\ sin\ pasajeros.\ \r\nc)\ \ \ \ Implemente\ m\u00E9todos\ para\:\ \r\ni.\ \ \ \ devolver\ la\ cantidad\ de\ asientos\ ocupados\r\nii.\ \ \ devolver\ si\ el\ micro\ est\u00E1\ lleno\r\niii.\ \ validar\ un\ n\u00FAmero\ de\ asiento\ recibido\ como\ par\u00E1metro\r\niv.\ \ \ devolver\ el\ estado\ de\ un\ nro.\ de\ asiento\ v\u00E1lido\ recibido\ como\ par\u00E1metro\r\nv.\ \ \ \ ocupar\ un\ nro.\ de\ asiento\ v\u00E1lido\ recibido\ como\ par\u00E1metro\r\nvi.\ \ \ liberar\ un\ nro.\ de\ asiento\ v\u00E1lido\ recibido\ como\ par\u00E1metro\r\nvii.\ \ devolver\ el\ nro.\ del\ primer\ asiento\ libre\r\n\r\n
comment1.params=
comment1.target=Micro()
comment10.params=
comment10.target=void\ InicializarMicro()
comment11.params=
comment11.target=boolean\ getLleno()
comment12.params=pos
comment12.target=boolean\ validar(int)
comment13.params=pos
comment13.target=boolean\ ocupado(int)
comment14.params=pos
comment14.target=void\ Ocupar(int)
comment15.params=pos
comment15.target=void\ Desocupar(int)
comment16.params=
comment16.target=int\ PrimerAsientoLibre()
comment2.params=patente\ destino\ hora
comment2.target=Micro(java.lang.String,\ java.lang.String,\ int)
comment3.params=
comment3.target=java.lang.String\ getPatente()
comment4.params=patente
comment4.target=void\ setPatente(java.lang.String)
comment5.params=
comment5.target=java.lang.String\ getDestino()
comment6.params=destino
comment6.target=void\ setDestino(java.lang.String)
comment7.params=
comment7.target=int\ getHora()
comment8.params=hora
comment8.target=void\ setHora(int)
comment9.params=
comment9.target=int\ getAsientosOcupados()
numComments=17
